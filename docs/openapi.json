{
	"openapi": "3.0.3",
	"info": {
		"title": "PR News Backend API",
		"version": "1.0.0",
		"description": "Pull Request解説記事生成サービスのバックエンドAPI仕様書。API設計ガイドラインに基づき、Hono + Zod + Hono Client を用いたREST APIの設計方針を反映しています。\n共通レスポンスとして ApiResponse<T> を採用し、エラーコードは ErrorCode として列挙型で管理します。"
	},
	"servers": [
		{
			"url": "/"
		}
	],
	"components": {
		"securitySchemes": {
			"bearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT",
				"description": "Firebase IDトークンを Bearer トークンとして指定します。"
			}
		},
		"schemas": {
			"ErrorCode": {
				"type": "string",
				"description": "アプリケーション固有のエラーコードの列挙型",
				"enum": [
					"VALIDATION_ERROR",
					"UNAUTHENTICATED",
					"FORBIDDEN",
					"NOT_FOUND",
					"INTERNAL_SERVER_ERROR",
					"GITHUB_REPO_NOT_FOUND",
					"ARTICLE_NOT_FOUND"
				],
				"example": "NOT_FOUND"
			},
			"ErrorObject": {
				"type": "object",
				"description": "エラーレスポンスの詳細情報",
				"properties": {
					"code": {
						"$ref": "#/components/schemas/ErrorCode"
					},
					"details": {
						"type": "object",
						"nullable": true,
						"description": "エラーの詳細情報（バリデーションエラーの場合、フィールドごとのエラー内容など）",
						"additionalProperties": true,
						"example": [
							{
								"field": "email",
								"reason": "正しいメールアドレス形式で入力してください"
							}
						]
					}
				},
				"required": ["code"]
			},
			"User": {
				"type": "object",
				"description": "ユーザー情報を表すスキーマ",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid",
						"description": "ユーザーID (UUID形式)"
					},
					"githubUserId": {
						"type": "integer",
						"description": "GitHub ユーザーID (整数、正の数)",
						"minimum": 1
					},
					"githubUsername": {
						"type": "string",
						"description": "GitHub ユーザー名 (必須)",
						"minLength": 1
					},
					"githubDisplayName": {
						"type": "string",
						"nullable": true,
						"description": "GitHub 表示名"
					},
					"email": {
						"type": "string",
						"format": "email",
						"nullable": true,
						"description": "メールアドレス (正しいメールアドレス形式)"
					},
					"avatarUrl": {
						"type": "string",
						"format": "url",
						"nullable": true,
						"description": "アバター画像のURL (正しいURL形式)"
					},
					"language": {
						"type": "string",
						"description": "ユーザーの希望言語コード (例: ja, en)",
						"minLength": 2,
						"maxLength": 2,
						"default": "ja"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time",
						"description": "作成日時 (正しい日時形式)",
						"nullable": true
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time",
						"description": "更新日時 (正しい日時形式)",
						"nullable": true
					}
				},
				"required": ["id", "githubUserId", "githubUsername", "language"]
			},
			"PullRequest": {
				"type": "object",
				"description": "Pull Requestの基本情報を表すスキーマ",
				"properties": {
					"prNumber": {
						"type": "integer",
						"description": "PR 番号 (整数、正の数)",
						"minimum": 1
					},
					"repositoryFullName": {
						"type": "string",
						"description": "リポジトリのフルネーム (例: 'owner/repo')"
					},
					"githubPrUrl": {
						"type": "string",
						"format": "url",
						"description": "GitHub上のPRのURL (正しいURL形式)"
					},
					"title": {
						"type": "string",
						"description": "PRのタイトル"
					},
					"body": {
						"type": "string",
						"nullable": true,
						"description": "PRの本文"
					},
					"diff": {
						"type": "string",
						"description": "PRの差分情報"
					},
					"authorLogin": {
						"type": "string",
						"description": "PR作成者のGitHubログイン名"
					},
					"githubPrCreatedAt": {
						"type": "string",
						"format": "date-time",
						"description": "GitHub上でのPR作成日時 (正しい日時形式)"
					}
				},
				"required": [
					"prNumber",
					"repositoryFullName",
					"githubPrUrl",
					"title",
					"diff",
					"authorLogin",
					"githubPrCreatedAt"
				]
			},
			"ChangeTypeEnum": {
				"type": "string",
				"description": "変更の種類を示す列挙型",
				"enum": [
					"FEAT",
					"FIX",
					"REFACTOR",
					"DOCS",
					"TEST",
					"PERF",
					"BUILD",
					"CHORE"
				],
				"example": "FEAT"
			},
			"CategoryEnum": {
				"type": "string",
				"description": "注目ポイントのカテゴリを示す列挙型",
				"enum": ["TECH", "RISK", "UX", "PERF", "SECURITY"],
				"example": "TECH"
			},
			"MainChange": {
				"type": "object",
				"description": "主要な変更点を示すスキーマ",
				"properties": {
					"fileName": {
						"type": "string",
						"description": "変更されたファイル名"
					},
					"changeTypes": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ChangeTypeEnum"
						},
						"description": "変更の種類（複数選択可）",
						"minItems": 1
					},
					"description": {
						"type": "string",
						"description": "変更内容の説明"
					}
				},
				"required": ["fileName", "changeTypes", "description"]
			},
			"NotablePoint": {
				"type": "object",
				"description": "特筆すべき点を示すスキーマ",
				"properties": {
					"categories": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CategoryEnum"
						},
						"description": "注目ポイントのカテゴリ（複数選択可）",
						"minItems": 1
					},
					"point": {
						"type": "string",
						"description": "注目ポイントの内容"
					}
				},
				"required": ["categories", "point"]
			},
			"PullRequestArticle": {
				"type": "object",
				"description": "Pull Request解説記事（多言語対応）",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid",
						"description": "記事ID (UUID形式)"
					},
					"contents": {
						"type": "object",
						"description": "言語コードをキーとした記事内容のオブジェクト。記事がまだない場合はundefined。",
						"additionalProperties": {
							"$ref": "#/components/schemas/ArticleContent"
						}
					},
					"createdAt": {
						"type": "string",
						"format": "date-time",
						"description": "作成日時 (正しい日時形式)",
						"nullable": true
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time",
						"description": "更新日時 (正しい日時形式)",
						"nullable": true
					}
				},
				"required": ["id"]
			},
			"ArticleContent": {
				"type": "object",
				"description": "言語ごとの記事内容",
				"properties": {
					"aiGeneratedTitle": {
						"type": "string",
						"description": "AI生成タイトル"
					},
					"backgroundAndPurpose": {
						"type": "string",
						"description": "背景・目的",
						"nullable": true
					},
					"mainChanges": {
						"type": "array",
						"items": { "$ref": "#/components/schemas/MainChange" },
						"description": "主要な変更点",
						"nullable": true
					},
					"notablePoints": {
						"type": "array",
						"items": { "$ref": "#/components/schemas/NotablePoint" },
						"description": "注目ポイント",
						"nullable": true
					},
					"likeCount": {
						"type": "integer",
						"format": "int32",
						"default": 0,
						"description": "この言語版の記事のいいね数"
					},
					"summaryGeneratedAt": {
						"type": "string",
						"format": "date-time",
						"description": "要約生成日時"
					}
				},
				"required": ["aiGeneratedTitle", "likeCount", "summaryGeneratedAt"]
			},
			"AuthSession": {
				"type": "object",
				"description": "認証セッション情報を表すスキーマ",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid",
						"description": "セッションID (UUID形式)"
					},
					"userId": {
						"type": "string",
						"format": "uuid",
						"description": "ユーザーID (UUID形式)"
					},
					"firebaseUid": {
						"type": "string",
						"description": "Firebase UID"
					},
					"tokenHash": {
						"type": "string",
						"description": "トークンのハッシュ値 (SHA-256、64文字)",
						"minLength": 64,
						"maxLength": 64
					},
					"expiresAt": {
						"type": "string",
						"format": "date-time",
						"description": "トークンの有効期限 (正しい日時形式)"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time",
						"description": "セッション作成日時 (正しい日時形式)"
					},
					"revokedAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true,
						"description": "セッション無効化日時 (正しい日時形式、任意)"
					}
				},
				"required": [
					"id",
					"userId",
					"firebaseUid",
					"tokenHash",
					"expiresAt",
					"createdAt"
				]
			},
			"HealthCheckResponseData": {
				"type": "object",
				"properties": {
					"ok": {
						"type": "boolean"
					}
				},
				"required": ["ok"]
			},
			"LogoutResponseData": {
				"type": "object",
				"description": "ログアウト成功時の空のデータオブジェクト"
			},
			"FavoriteRepository": {
				"type": "object",
				"description": "お気に入りリポジトリ情報",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid",
						"description": "お気に入り登録ID"
					},
					"userId": {
						"type": "string",
						"format": "uuid",
						"description": "ユーザーID"
					},
					"githubRepoId": {
						"type": "integer",
						"description": "GitHubリポジトリの数値ID"
					},
					"repositoryFullName": {
						"type": "string",
						"description": "リポジトリフルネーム (owner/repo)"
					},
					"owner": { "type": "string", "description": "オーナー名" },
					"repo": { "type": "string", "description": "リポジトリ名" },
					"registeredAt": {
						"type": "string",
						"format": "date-time",
						"description": "登録日時"
					}
				},
				"required": [
					"id",
					"userId",
					"githubRepoId",
					"repositoryFullName",
					"owner",
					"repo",
					"registeredAt"
				]
			},
			"ArticleLike": {
				"type": "object",
				"description": "記事へのいいね情報",
				"properties": {
					"id": { "type": "string", "format": "uuid" },
					"userId": { "type": "string", "format": "uuid" },
					"articleId": { "type": "string", "format": "uuid" },
					"languageCode": { "type": "string", "pattern": "^[a-z]{2}$" },
					"likedAt": { "type": "string", "format": "date-time" }
				},
				"required": ["id", "userId", "articleId", "languageCode", "likedAt"]
			},
			"LikedArticleInfo": {
				"type": "object",
				"description": "いいねした記事の要約情報",
				"properties": {
					"articleId": { "type": "string", "format": "uuid" },
					"languageCode": { "type": "string", "pattern": "^[a-z]{2}$" },
					"likedAt": { "type": "string", "format": "date-time" },
					"aiGeneratedTitle": { "type": "string" },
					"repositoryFullName": { "type": "string" },
					"prNumber": { "type": "integer" }
				},
				"required": [
					"articleId",
					"languageCode",
					"likedAt",
					"aiGeneratedTitle",
					"repositoryFullName",
					"prNumber"
				]
			},
			"RankedArticleInfo": {
				"type": "object",
				"description": "ランキングされた記事の情報",
				"properties": {
					"rank": { "type": "integer" },
					"articleId": { "type": "string", "format": "uuid" },
					"languageCode": { "type": "string", "pattern": "^[a-z]{2}$" },
					"aiGeneratedTitle": { "type": "string" },
					"repositoryFullName": { "type": "string" },
					"prNumber": { "type": "integer" },
					"likeCount": { "type": "integer" }
				},
				"required": [
					"rank",
					"articleId",
					"languageCode",
					"aiGeneratedTitle",
					"repositoryFullName",
					"prNumber",
					"likeCount"
				]
			},
			"Pagination": {
				"type": "object",
				"description": "ページネーション情報",
				"properties": {
					"totalItems": { "type": "integer" },
					"limit": { "type": "integer" },
					"offset": { "type": "integer" }
				},
				"required": ["totalItems", "limit", "offset"]
			}
		}
	},
	"paths": {
		"/healthz": {
			"get": {
				"summary": "ヘルスチェック",
				"description": "サービスの稼働状況を確認します。コンテナやロードバランサのliveness/readiness probeに使用されます。",
				"tags": ["General"],
				"responses": {
					"200": {
						"description": "サービス正常稼働",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true
										},
										"data": {
											"$ref": "#/components/schemas/HealthCheckResponseData"
										},
										"message": {
											"type": "string",
											"nullable": true
										}
									},
									"required": ["success", "data"]
								},
								"example": {
									"success": true,
									"data": {
										"ok": true
									}
								}
							}
						}
					},
					"500": {
						"description": "サーバー内部エラー",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": false
										},
										"error": {
											"$ref": "#/components/schemas/ErrorObject"
										},
										"message": {
											"type": "string",
											"nullable": true
										}
									},
									"required": ["success", "error"]
								},
								"example": {
									"success": false,
									"error": {
										"code": "INTERNAL_SERVER_ERROR"
									},
									"message": "サーバー内部でエラーが発生しました。"
								}
							}
						}
					}
				}
			}
		},
		"/users/me": {
			"get": {
				"summary": "現在のユーザー情報を取得",
				"description": "認証されている現在のユーザーのプロファイル情報を取得します。フロントエンドのユーザーダッシュボード初期読み込みなどに使用されます。",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": ["User & Auth"],
				"responses": {
					"200": {
						"description": "ユーザー情報の取得成功",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true
										},
										"data": {
											"$ref": "#/components/schemas/User"
										},
										"message": {
											"type": "string",
											"nullable": true
										}
									},
									"required": ["success", "data"]
								},
								"example": {
									"success": true,
									"data": {
										"id": "5f8c9c1d-df89-4294-8218-a303ef525b6c",
										"githubUsername": "octocat",
										"avatarUrl": "https://avatars.githubusercontent.com/u/583231?v=4"
									}
								}
							}
						}
					},
					"401": {
						"description": "認証エラー (トークン無効など)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": false
										},
										"error": {
											"$ref": "#/components/schemas/ErrorObject"
										},
										"message": {
											"type": "string",
											"nullable": true
										}
									},
									"required": ["success", "error"]
								},
								"example": {
									"success": false,
									"error": {
										"code": "UNAUTHENTICATED"
									},
									"message": "認証トークンが無効です。再度ログインしてください。"
								}
							}
						}
					},
					"500": {
						"description": "サーバー内部エラー",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": false
										},
										"error": {
											"$ref": "#/components/schemas/ErrorObject"
										},
										"message": {
											"type": "string",
											"nullable": true
										}
									},
									"required": ["success", "error"]
								},
								"example": {
									"success": false,
									"error": {
										"code": "INTERNAL_SERVER_ERROR"
									},
									"message": "サーバー内部でエラーが発生しました。"
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "お気に入りリポジトリを登録",
				"description": "指定されたGitHubリポジトリをユーザーのお気に入りとして登録します。",
				"tags": ["Favorites"],
				"security": [{ "bearerAuth": [] }],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"owner": {
										"type": "string",
										"description": "リポジトリのオーナー名"
									},
									"repo": { "type": "string", "description": "リポジトリ名" }
								},
								"required": ["owner", "repo"]
							},
							"example": { "owner": "octocat", "repo": "Hello-World" }
						}
					}
				},
				"responses": {
					"200": {
						"description": "リポジトリは既にお気に入り登録済み (既存の情報を返却)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": true },
										"data": {
											"$ref": "#/components/schemas/FavoriteRepository"
										},
										"message": { "type": "string", "nullable": true }
									}
								}
							}
						}
					},
					"201": {
						"description": "お気に入りリポジトリの登録成功 (新規登録)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": true },
										"data": {
											"$ref": "#/components/schemas/FavoriteRepository"
										},
										"message": { "type": "string", "nullable": true }
									}
								}
							}
						}
					},
					"400": { "$ref": "#/components/responses/BadRequest" },
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"404": {
						"description": "指定されたGitHubリポジトリが見つからない",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false },
										"error": { "$ref": "#/components/schemas/ErrorObject" },
										"message": { "type": "string", "nullable": true }
									},
									"example": {
										"success": false,
										"error": { "code": "GITHUB_REPO_NOT_FOUND" },
										"message": "指定されたGitHubリポジトリが見つかりません。"
									}
								}
							}
						}
					},
					"500": { "$ref": "#/components/responses/InternalServerError" }
				}
			}
		},
		"/auth/logout": {
			"post": {
				"summary": "ログアウト処理",
				"description": "現在のユーザーセッションを無効化し、ログアウトします。サーバー側でAuthSessionのrevokedAtを更新します。",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": ["User & Auth"],
				"responses": {
					"200": {
						"description": "ログアウト成功",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true
										},
										"data": {
											"$ref": "#/components/schemas/LogoutResponseData"
										},
										"message": {
											"type": "string",
											"nullable": true
										}
									},
									"required": ["success", "data"]
								},
								"example": {
									"success": true,
									"data": {},
									"message": "Logged out successfully"
								}
							}
						}
					},
					"401": {
						"description": "認証エラー",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": false
										},
										"error": {
											"$ref": "#/components/schemas/ErrorObject"
										},
										"message": {
											"type": "string",
											"nullable": true
										}
									},
									"required": ["success", "error"]
								},
								"example": {
									"success": false,
									"error": {
										"code": "UNAUTHENTICATED"
									},
									"message": "認証されていません。"
								}
							}
						}
					},
					"500": {
						"description": "サーバー内部エラー",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": false
										},
										"error": {
											"$ref": "#/components/schemas/ErrorObject"
										},
										"message": {
											"type": "string",
											"nullable": true
										}
									},
									"required": ["success", "error"]
								},
								"example": {
									"success": false,
									"error": {
										"code": "INTERNAL_SERVER_ERROR"
									},
									"message": "サーバー内部でエラーが発生しました。"
								}
							}
						}
					}
				}
			}
		},
		"/auth/signup": {
			"post": {
				"summary": "ユーザーサインアップ",
				"description": "新規ユーザー登録。language（2文字コード、省略時ja）を指定可能。",
				"security": [{ "bearerAuth": [] }],
				"tags": ["User & Auth"],
				"requestBody": {
					"required": false,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"language": {
										"type": "string",
										"description": "希望言語コード (例: ja, en)",
										"minLength": 2,
										"maxLength": 2,
										"default": "ja"
									}
								}
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "ユーザー作成成功",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"409": {
						"description": "既存ユーザー",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorObject"
								}
							}
						}
					}
				}
			}
		},
		"/repos/{owner}/{repo}/pulls/{number}/ingest": {
			"post": {
				"summary": "GitHubから指定されたPull Request情報を取得・保存",
				"description": "GitHub APIを利用してPull Requestのメタデータ、差分、コメントなどを取得し、データベースにPullRequestとして保存（既に存在する場合は更新）します。",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": ["Pull Request"],
				"parameters": [
					{
						"name": "owner",
						"in": "path",
						"required": true,
						"description": "リポジトリのオーナー名",
						"schema": {
							"type": "string"
						},
						"example": "octocat"
					},
					{
						"name": "repo",
						"in": "path",
						"required": true,
						"description": "リポジトリ名",
						"schema": {
							"type": "string"
						},
						"example": "Hello-World"
					},
					{
						"name": "number",
						"in": "path",
						"required": true,
						"description": "Pull Requestの番号",
						"schema": {
							"type": "integer"
						},
						"example": 42
					}
				],
				"responses": {
					"200": {
						"description": "Pull Request情報の取得・保存成功",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true
										},
										"data": {
											"$ref": "#/components/schemas/PullRequest"
										},
										"message": {
											"type": "string",
											"nullable": true
										}
									},
									"required": ["success", "data"]
								},
								"example": {
									"success": true,
									"data": {
										"prNumber": 42,
										"repositoryFullName": "acme/widgets",
										"githubPrUrl": "https://github.com/acme/widgets/pull/42",
										"title": "feat: add new widget",
										"body": "This PR adds a new widget to the application.",
										"diff": "...",
										"authorLogin": "alice",
										"githubPrCreatedAt": "2025-06-04T12:34:56Z"
									}
								}
							}
						}
					},
					"401": {
						"description": "認証エラー",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": false
										},
										"error": {
											"$ref": "#/components/schemas/ErrorObject"
										},
										"message": {
											"type": "string",
											"nullable": true
										}
									},
									"required": ["success", "error"]
								},
								"example": {
									"success": false,
									"error": {
										"code": "UNAUTHENTICATED"
									}
								}
							}
						}
					},
					"404": {
						"description": "指定されたリソースが見つからない (例: GitHub上でPRが存在しない)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": false
										},
										"error": {
											"$ref": "#/components/schemas/ErrorObject"
										},
										"message": {
											"type": "string",
											"nullable": true
										}
									},
									"required": ["success", "error"]
								},
								"example": {
									"success": false,
									"error": {
										"code": "NOT_FOUND"
									},
									"message": "指定されたPull Requestが見つかりません。"
								}
							}
						}
					},
					"500": {
						"description": "サーバー内部エラー",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": false
										},
										"error": {
											"$ref": "#/components/schemas/ErrorObject"
										},
										"message": {
											"type": "string",
											"nullable": true
										}
									},
									"required": ["success", "error"]
								},
								"example": {
									"success": false,
									"error": {
										"code": "INTERNAL_SERVER_ERROR"
									}
								}
							}
						}
					}
				}
			}
		},
		"/repos/{owner}/{repo}/pulls/{number}/article": {
			"post": {
				"summary": "指定されたPull Requestの解説記事をAIで生成・保存",
				"description": "既存のPullRequest情報を基に、Geminiを利用して差分を要約し、PullRequestArticleとして生成・保存します。PullRequestが存在しない場合は404エラーとなります。",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": ["Article Generation"],
				"parameters": [
					{
						"name": "owner",
						"in": "path",
						"required": true,
						"description": "リポジトリのオーナー名",
						"schema": {
							"type": "string"
						},
						"example": "octocat"
					},
					{
						"name": "repo",
						"in": "path",
						"required": true,
						"description": "リポジトリ名",
						"schema": {
							"type": "string"
						},
						"example": "Hello-World"
					},
					{
						"name": "number",
						"in": "path",
						"required": true,
						"description": "Pull Requestの番号",
						"schema": {
							"type": "integer"
						},
						"example": 42
					}
				],
				"responses": {
					"200": {
						"description": "Pull Request解説記事の生成・保存成功",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true
										},
										"data": {
											"$ref": "#/components/schemas/PullRequestArticle"
										},
										"message": {
											"type": "string",
											"nullable": true
										}
									},
									"required": ["success", "data"]
								},
								"example": {
									"success": true,
									"data": {
										"id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
										"prNumber": 42,
										"repositoryFullName": "acme/widgets",
										"githubPrUrl": "https://github.com/acme/widgets/pull/42",
										"title": "feat: add new widget",
										"authorLogin": "alice",
										"githubPrCreatedAt": "2025-06-04T12:34:56Z",
										"aiGeneratedTitle": "✨ 新しいウィジェット機能の追加",
										"summaryGeneratedAt": "2025-06-04T13:00:00Z"
									}
								}
							}
						}
					},
					"202": {
						"description": "解説記事の生成処理受付完了（非同期処理中）",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true
										},
										"message": {
											"type": "string",
											"nullable": false
										}
									},
									"required": ["success", "message"]
								},
								"example": {
									"success": true,
									"message": "Pull Request解説記事の生成処理を受け付けました。完了までしばらくお待ちください。"
								}
							}
						}
					},
					"401": {
						"description": "認証エラー",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": false
										},
										"error": {
											"$ref": "#/components/schemas/ErrorObject"
										},
										"message": {
											"type": "string",
											"nullable": true
										}
									},
									"required": ["success", "error"]
								},
								"example": {
									"success": false,
									"error": {
										"code": "UNAUTHENTICATED"
									}
								}
							}
						}
					},
					"404": {
						"description": "対象のPull Requestが見つからない",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": false
										},
										"error": {
											"$ref": "#/components/schemas/ErrorObject"
										},
										"message": {
											"type": "string",
											"nullable": true
										}
									},
									"required": ["success", "error"]
								},
								"example": {
									"success": false,
									"error": {
										"code": "NOT_FOUND"
									},
									"message": "解説記事生成の元となるPull Requestが見つかりません。"
								}
							}
						}
					},
					"500": {
						"description": "サーバー内部エラー（AI生成失敗など）",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": false
										},
										"error": {
											"$ref": "#/components/schemas/ErrorObject"
										},
										"message": {
											"type": "string",
											"nullable": true
										}
									},
									"required": ["success", "error"]
								},
								"example": {
									"success": false,
									"error": {
										"code": "INTERNAL_SERVER_ERROR"
									},
									"message": "記事生成中にエラーが発生しました。"
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "生成済みのPull Request解説記事を取得",
				"description": "指定されたPull Requestに対応する、生成済みの解説記事を取得します。記事がまだ生成されていない場合は404エラーとなります。",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": ["Article Generation"],
				"parameters": [
					{
						"name": "owner",
						"in": "path",
						"required": true,
						"description": "リポジトリのオーナー名",
						"schema": {
							"type": "string"
						},
						"example": "octocat"
					},
					{
						"name": "repo",
						"in": "path",
						"required": true,
						"description": "リポジトリ名",
						"schema": {
							"type": "string"
						},
						"example": "Hello-World"
					},
					{
						"name": "number",
						"in": "path",
						"required": true,
						"description": "Pull Requestの番号",
						"schema": {
							"type": "integer"
						},
						"example": 42
					}
				],
				"responses": {
					"200": {
						"description": "Pull Request解説記事の取得成功",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true
										},
										"data": {
											"$ref": "#/components/schemas/PullRequestArticle"
										},
										"message": {
											"type": "string",
											"nullable": true
										}
									},
									"required": ["success", "data"]
								},
								"example": {
									"success": true,
									"data": {
										"id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
										"prNumber": 42,
										"repositoryFullName": "acme/widgets",
										"githubPrUrl": "https://github.com/acme/widgets/pull/42",
										"title": "feat: add new widget",
										"authorLogin": "alice",
										"githubPrCreatedAt": "2025-06-04T12:34:56Z",
										"aiGeneratedTitle": "✨ 新しいウィジェット機能の追加",
										"mainChanges": [
											{
												"fileName": "src/widget.ts",
												"changeTypes": ["FEAT"],
												"description": "Widgetクラスに新しいメソッドを追加"
											}
										],
										"summaryGeneratedAt": "2025-06-04T13:00:00Z"
									}
								}
							}
						}
					},
					"401": {
						"description": "認証エラー",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": false
										},
										"error": {
											"$ref": "#/components/schemas/ErrorObject"
										},
										"message": {
											"type": "string",
											"nullable": true
										}
									},
									"required": ["success", "error"]
								},
								"example": {
									"success": false,
									"error": {
										"code": "UNAUTHENTICATED"
									}
								}
							}
						}
					},
					"404": {
						"description": "解説記事がまだ生成されていない、またはPull Requestが存在しない",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": false
										},
										"error": {
											"$ref": "#/components/schemas/ErrorObject"
										},
										"message": {
											"type": "string",
											"nullable": true
										}
									},
									"required": ["success", "error"]
								},
								"example": {
									"success": false,
									"error": {
										"code": "NOT_FOUND"
									},
									"message": "指定されたPull Requestの解説記事は見つかりません。"
								}
							}
						}
					},
					"500": {
						"description": "サーバー内部エラー",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": false
										},
										"error": {
											"$ref": "#/components/schemas/ErrorObject"
										},
										"message": {
											"type": "string",
											"nullable": true
										}
									},
									"required": ["success", "error"]
								},
								"example": {
									"success": false,
									"error": {
										"code": "INTERNAL_SERVER_ERROR"
									}
								}
							}
						}
					}
				}
			}
		},
		"/repos/{owner}/{repo}/pulls/{number}": {
			"get": {
				"summary": "データベースにキャッシュされたPull Request本体を取得",
				"description": "GitHub APIのレート制限対策として、データベースにキャッシュされたPull Request情報を優先して返します。`refresh=true` クエリパラメータで強制的にGitHubから最新情報を取得しキャッシュを更新することも可能です。",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": ["Pull Request"],
				"parameters": [
					{
						"name": "owner",
						"in": "path",
						"required": true,
						"description": "リポジトリのオーナー名",
						"schema": {
							"type": "string"
						},
						"example": "octocat"
					},
					{
						"name": "repo",
						"in": "path",
						"required": true,
						"description": "リポジトリ名",
						"schema": {
							"type": "string"
						},
						"example": "Hello-World"
					},
					{
						"name": "number",
						"in": "path",
						"required": true,
						"description": "Pull Requestの番号",
						"schema": {
							"type": "integer"
						},
						"example": 42
					},
					{
						"name": "refresh",
						"in": "query",
						"required": false,
						"description": "trueの場合、キャッシュを無視してGitHubから最新情報を強制的に取得・更新します。",
						"schema": {
							"type": "boolean"
						},
						"example": false
					}
				],
				"responses": {
					"200": {
						"description": "Pull Request情報の取得成功",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true
										},
										"data": {
											"$ref": "#/components/schemas/PullRequest"
										},
										"message": {
											"type": "string",
											"nullable": true
										}
									},
									"required": ["success", "data"]
								},
								"example": {
									"success": true,
									"data": {
										"prNumber": 42,
										"repositoryFullName": "acme/widgets",
										"githubPrUrl": "https://github.com/acme/widgets/pull/42",
										"title": "feat: add new widget",
										"authorLogin": "alice",
										"githubPrCreatedAt": "2025-06-04T12:34:56Z"
									}
								}
							}
						}
					},
					"401": {
						"description": "認証エラー",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": false
										},
										"error": {
											"$ref": "#/components/schemas/ErrorObject"
										},
										"message": {
											"type": "string",
											"nullable": true
										}
									},
									"required": ["success", "error"]
								},
								"example": {
									"success": false,
									"error": {
										"code": "UNAUTHENTICATED"
									}
								}
							}
						}
					},
					"404": {
						"description": "Pull Requestが見つからない",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": false
										},
										"error": {
											"$ref": "#/components/schemas/ErrorObject"
										},
										"message": {
											"type": "string",
											"nullable": true
										}
									},
									"required": ["success", "error"]
								},
								"example": {
									"success": false,
									"error": {
										"code": "NOT_FOUND"
									},
									"message": "指定されたPull Requestは見つかりません。"
								}
							}
						}
					},
					"500": {
						"description": "サーバー内部エラー",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": false
										},
										"error": {
											"$ref": "#/components/schemas/ErrorObject"
										},
										"message": {
											"type": "string",
											"nullable": true
										}
									},
									"required": ["success", "error"]
								},
								"example": {
									"success": false,
									"error": {
										"code": "INTERNAL_SERVER_ERROR"
									}
								}
							}
						}
					}
				}
			}
		},
		"/articles/{articleId}/language/{langCode}/like": {
			"post": {
				"summary": "記事に「いいね」を付ける",
				"description": "指定されたAI解説記事の特定言語版に「いいね」を付けます。",
				"tags": ["Likes"],
				"security": [{ "bearerAuth": [] }],
				"parameters": [
					{
						"name": "articleId",
						"in": "path",
						"required": true,
						"description": "PullRequestArticleのID",
						"schema": { "type": "string", "format": "uuid" }
					},
					{
						"name": "langCode",
						"in": "path",
						"required": true,
						"description": "記事の言語コード (例: ja, en)",
						"schema": { "type": "string", "pattern": "^[a-z]{2}$" }
					}
				],
				"responses": {
					"200": {
						"description": "既にいいね済みの場合 (現在のいいね数を返却)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": true },
										"data": {
											"type": "object",
											"properties": {
												"message": {
													"type": "string",
													"example": "既にいいね済みです"
												},
												"likeCount": { "type": "integer", "example": 15 }
											}
										},
										"message": { "type": "string", "nullable": true }
									}
								}
							}
						}
					},
					"201": {
						"description": "いいね成功 (新規いいね、新しいいいね数を返却)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": true },
										"data": {
											"type": "object",
											"properties": {
												"message": {
													"type": "string",
													"example": "いいねしました"
												},
												"likeCount": { "type": "integer", "example": 16 }
											}
										},
										"message": { "type": "string", "nullable": true }
									}
								}
							}
						}
					},
					"400": { "$ref": "#/components/responses/BadRequest" },
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"404": {
						"description": "指定された記事が見つからない",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false },
										"error": { "$ref": "#/components/schemas/ErrorObject" },
										"message": { "type": "string", "nullable": true }
									},
									"example": {
										"success": false,
										"error": { "code": "ARTICLE_NOT_FOUND" },
										"message": "指定された記事が見つかりません。"
									}
								}
							}
						}
					},
					"500": { "$ref": "#/components/responses/InternalServerError" }
				}
			},
			"delete": {
				"summary": "記事の「いいね」を取り消す",
				"description": "指定されたAI解説記事の特定言語版への「いいね」を取り消します。",
				"tags": ["Likes"],
				"security": [{ "bearerAuth": [] }],
				"parameters": [
					{
						"name": "articleId",
						"in": "path",
						"required": true,
						"description": "PullRequestArticleのID",
						"schema": { "type": "string", "format": "uuid" }
					},
					{
						"name": "langCode",
						"in": "path",
						"required": true,
						"description": "記事の言語コード (例: ja, en)",
						"schema": { "type": "string", "pattern": "^[a-z]{2}$" }
					}
				],
				"responses": {
					"200": {
						"description": "いいねの取り消し成功、または元々いいねしていなかった場合 (現在のいいね数を返却)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": true },
										"data": {
											"type": "object",
											"properties": {
												"likeCount": { "type": "integer", "example": 14 }
											}
										},
										"message": { "type": "string", "nullable": true }
									}
								}
							}
						}
					},
					"400": { "$ref": "#/components/responses/BadRequest" },
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"404": {
						"description": "指定された記事が見つからない (いいね対象の記事自体が存在しない場合)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false },
										"error": { "$ref": "#/components/schemas/ErrorObject" },
										"message": { "type": "string", "nullable": true }
									}
								}
							}
						}
					},
					"500": { "$ref": "#/components/responses/InternalServerError" }
				}
			}
		},
		"/users/me/liked-articles": {
			"get": {
				"summary": "自分が「いいね」した記事の一覧を取得",
				"description": "認証ユーザーが過去に「いいね」したAI解説記事の一覧を、絞り込み、ページネーション、ソート指定付きで取得します。",
				"tags": ["User & Auth", "Likes"],
				"security": [{ "bearerAuth": [] }],
				"parameters": [
					{
						"name": "lang",
						"in": "query",
						"required": false,
						"description": "特定の言語でいいねした記事に絞り込む (例: ja, en)",
						"schema": { "type": "string", "pattern": "^[a-z]{2}$" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": false,
						"description": "取得件数 (デフォルトはサーバー側で設定)",
						"schema": { "type": "integer", "minimum": 1, "default": 10 }
					},
					{
						"name": "offset",
						"in": "query",
						"required": false,
						"description": "開始位置 (デフォルトは0)",
						"schema": { "type": "integer", "minimum": 0, "default": 0 }
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"description": "ソート順 (例: likedAt_desc, likedAt_asc)",
						"schema": {
							"type": "string",
							"enum": ["likedAt_desc", "likedAt_asc"]
						}
					}
				],
				"responses": {
					"200": {
						"description": "自分がいいねした記事一覧の取得成功",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": true },
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/LikedArticleInfo"
											}
										},
										"message": { "type": "string", "nullable": true },
										"pagination": {
											"type": "object",
											"properties": {
												"totalItems": { "type": "integer" },
												"limit": { "type": "integer" },
												"offset": { "type": "integer" }
											}
										}
									}
								}
							}
						}
					},
					"400": { "$ref": "#/components/responses/BadRequest" },
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"500": { "$ref": "#/components/responses/InternalServerError" }
				}
			}
		},
		"/ranking/articles/likes": {
			"get": {
				"summary": "いいね数に基づいた記事ランキングを取得",
				"description": "AI解説記事のいいね数ランキングを、期間や言語で絞り込んで取得します。",
				"tags": ["Ranking"],
				"parameters": [
					{
						"name": "period",
						"in": "query",
						"required": false,
						"description": "集計期間",
						"schema": {
							"type": "string",
							"enum": ["weekly", "monthly", "all"],
							"default": "all"
						}
					},
					{
						"name": "language",
						"in": "query",
						"required": false,
						"description": "言語での絞り込み (ja, en, all)",
						"schema": {
							"type": "string",
							"pattern": "^[a-z]{2}|all$",
							"default": "all"
						}
					},
					{
						"name": "limit",
						"in": "query",
						"required": false,
						"description": "取得件数",
						"schema": { "type": "integer", "minimum": 1, "default": 10 }
					},
					{
						"name": "offset",
						"in": "query",
						"required": false,
						"description": "開始位置",
						"schema": { "type": "integer", "minimum": 0, "default": 0 }
					}
				],
				"responses": {
					"200": {
						"description": "記事ランキングの取得成功",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": true },
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/RankedArticleInfo"
											}
										},
										"pagination": { "$ref": "#/components/schemas/Pagination" },
										"message": { "type": "string", "nullable": true }
									}
								}
							}
						}
					},
					"400": { "$ref": "#/components/responses/BadRequest" },
					"500": { "$ref": "#/components/responses/InternalServerError" }
				}
			}
		}
	},
	"tags": [
		{
			"name": "General",
			"description": "一般的なAPI（ヘルスチェックなど）"
		},
		{
			"name": "User & Auth",
			"description": "ユーザー情報および認証関連のAPI"
		},
		{
			"name": "Pull Request",
			"description": "Pull Request情報の取得・管理API"
		},
		{
			"name": "Article Generation",
			"description": "Pull Request解説記事の生成・取得API"
		},
		{
			"name": "Favorites",
			"description": "お気に入りリポジトリの管理API"
		},
		{
			"name": "Likes",
			"description": "記事へのいいねAPI"
		},
		{
			"name": "Ranking",
			"description": "ランキング関連のAPI"
		}
	]
}
